list 조작 함수
-> .append() : 리스트 제일 뒤에 항목 추가
-> .pop() : 리스트 제일 뒤의 항목을 빼내고, 빼낸 항목은 삭제
-> .sort() : 리스트의 항목 정렬(list에서만 가능), 새로운 list 반환
-> sorted(list_name) : 리스트의 항목 정렬(list포함 여러가지), 기존 list 복사본 
-> .reverse() : 리스트 항목의 순서를 역순으로 만듬
-> .index(찾을 값) : 지정한 값을 찾아서 그 위치를 반환
-> .insert(위치, 값) : 지정된 위치에 값 삽입
-> .remove() : 리스트에서 지정한 값 제거
-> .extend() : 리스트 뒤에 리스트 추가
-> .count() : 리스트에서 찾을 값의 개수를 세기 (원소의 개수 세기)
-> del(list_name[index]) : 리스트에서 해당 위치의 항목 삭제
-> len(list_name) : 리스트에 포함된 전체 항목의 개수를 세기




문자열 포맷팅
1) %-formatting : %d/%f/%s 등 사용
   ex) name = 'james'
       age = 21
       print('이름: %s ,나이: %d' %(name, age))
       -> 이름: james ,나이: 21

2) '{}'.format() : ()안에 대입할 문자 or 숫자 입력
   ex) print("My name is {}".format('james'))
       -> My name is james
       
       
3) f-Strings : 문자, 숫자, 함수, 메소드 등 다양한 타입 가능
   ex) name = 'james'
       age = 21
       print(f"Hello, {name}. You are {age}.")
       -> Hello, james. You are 21.
   
   
   
strip 메서드
-> strip() : 양쪽 공백 제거
-> lstrip() : 왼쪽 공백 제거
-> rstrip() : 오른쪽 공백 제거



endswith, startswith 메서드
-> endswith : 파일 이름이 문자열로 저장되어 있을 때
   ex) file_name = "보고서.xlsx"
       print(file_name.endswith("xlsx"))
       -> True


-> startswith : 파일 이름이 문자열로 저장되어 있을 때
   ex) file_name = "2020_보고서.xlsx"
       print(file_name.startswith("2020")
       -> True
       
       
       
split 메서드
-> 공백을 기준으로 문자열 나누기
   ex) a = "hello world"
       print(a.split())
       -> ['hello', 'world'] (list 형)
      
      
join 메서드
-> "".join(리스트) : 리스트의 문자열들을 합치는 역할
   ex) name = ['james', 'kevin', 'sam', 'kane']
       print(" ".join(name))
       -> james kevin sam kane (type : str)


       
       
       
정렬
1) 왼쪽 정렬(:<)
ex) "{0:<10}".format("hi")
    -> 'hi        '
    
2) 오른쪽 정렬(:>)
ex) "{0:>10}".format("hi")
    -> '        hi'
    
3) 가운데 정렬(:^)
ex) "{0:^10}".format("hi")
    -> '    hi    '

4) 공백 채우기(공백 채울 문자를 정렬 문자 앞에 넣기)
ex) "{0:=^10}".format("hi")
    -> '====hi===='
       




